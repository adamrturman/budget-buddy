{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamrturman/Desktop/coding/budget-buddy/client/src/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, FormGroup, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport { setUpJWT } from './services/authService';\n\nfunction SignIn(props) {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    history\n  } = props;\n\n  const handleSubmit = event => {\n    axios({\n      url: '/auth/signin',\n      method: 'POST',\n      data: {\n        'username': username,\n        'password': password\n      }\n    }) //  Need to check if this user/password combination exists & matches in the DB before authenticating them with JWT\n    .then(res => {\n      setUpJWT(res.data);\n      history.push('/1');\n    }).catch(error => alert(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          id: \"my-helper-text\",\n          children: \"We'll never share your email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"my-input\",\n          type: \"password\",\n          \"aria-describedby\": \"my-helper-text\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          id: \"my-helper-text\",\n          children: \"Make your password unique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-up\",\n        children: \"Don't have an account? Sign Up Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/1\",\n        children: \"Go to page 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/2\",\n        children: \"Go to page 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/adamrturman/Desktop/coding/budget-buddy/client/src/SignIn.tsx"],"names":["React","useState","axios","Button","FormGroup","FormControl","InputLabel","Input","FormHelperText","Link","setUpJWT","SignIn","props","username","setUsername","password","setPassword","history","handleSubmit","event","url","method","data","then","res","push","catch","error","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Button, FormGroup, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport {setUpJWT} from './services/authService';\n\nfunction SignIn (props: any) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const { history } = props\n\n    const handleSubmit = (event: any) => {\n        axios({\n            url: '/auth/signin',\n            method: 'POST',\n            data: {\n                'username': username,\n                'password': password\n            }\n        })\n        //  Need to check if this user/password combination exists & matches in the DB before authenticating them with JWT\n        .then(res => {\n            setUpJWT(res.data);\n            history.push('/1')\n        })\n        .catch(error => alert(error))\n    }\n    \n    return (\n        <div>\n            <FormGroup>\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                    <Input id=\"my-input\" aria-describedby=\"my-helper-text\" onChange={event => setUsername(event.target.value)} />\n                    <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n                </FormControl>\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                    <Input id=\"my-input\"  type=\"password\" aria-describedby=\"my-helper-text\" onChange={event => setPassword(event.target.value)} />\n                    <FormHelperText id=\"my-helper-text\">Make your password unique</FormHelperText>\n                </FormControl>\n                <Button onClick={handleSubmit}>Submit</Button>\n            </FormGroup>\n            <div>\n                <Link to=\"/sign-up\">Don't have an account? Sign Up Here!</Link>\n            </div>\n            <div>\n                <Link to=\"/1\">Go to page 1</Link>\n            </div>\n            <div>\n                <Link to=\"/2\">Go to page 2</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}