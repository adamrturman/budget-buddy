{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamrturman/Desktop/coding/budget-buddy/client/src/List.tsx\";\nimport * as React from \"react\";\nexport const List = props => {\n  console.log(\"props in list\", props);\n  const characters = props.characters.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"Name: \", person.name, \", Height: \", person.height, \", Mass: \", person.mass, \", Homeworld: \", person.homeworld]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: characters\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this); // const characters = props.characters.map((person: any) => (\n  //         <tr>\n  //             <th scope=\"row\">{characters}</th>\n  //             <th scope=\"row\"></th>\n  //             <th scope=\"row\"></th>\n  //         </tr>\n  // ))\n  // return {characters} \n};\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/adamrturman/Desktop/coding/budget-buddy/client/src/List.tsx"],"names":["React","List","props","console","log","characters","map","person","name","height","mass","homeworld"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACA,QAAMG,UAAU,GAAGH,KAAK,CAACG,UAAN,CAAiBC,GAAjB,CAAsBC,MAAD,iBACtC;AAAA,yBACSA,MAAM,CAACC,IADhB,gBACgCD,MAAM,CAACE,MADvC,cACuDF,MAAM,CAACG,IAD9D,mBAEcH,MAAM,CAACI,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;AAMA,sBAAO;AAAA,cAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP,CARkC,CASpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAjBM;KAAMJ,I","sourcesContent":["import * as React from \"react\";\n\nexport const List = (props: any) => {\n  console.log(\"props in list\", props);\n  const characters = props.characters.map((person: any) => (\n    <li>\n      Name: {person.name}, Height: {person.height}, Mass: {person.mass},\n      Homeworld: {person.homeworld}\n    </li>\n  ));\n  return <ul>{characters}</ul>;\n// const characters = props.characters.map((person: any) => (\n//         <tr>\n//             <th scope=\"row\">{characters}</th>\n//             <th scope=\"row\"></th>\n//             <th scope=\"row\"></th>\n//         </tr>\n// ))\n// return {characters} \n};"]},"metadata":{},"sourceType":"module"}