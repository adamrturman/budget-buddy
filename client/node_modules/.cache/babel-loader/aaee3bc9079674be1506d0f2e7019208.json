{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamrturman/Desktop/coding/budget-buddy/client/src/Picture.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nexport default function Picture() {\n  _s();\n\n  const [pictureUrl, setPictureUrl] = React.useState('');\n\n  const handleClick = event => {\n    fetch(\"https://source.unsplash.com/random\") //  the response object has a url property that references the random picture\n    //  we can set this to the state of the pictureUrl\n    //  In the return, we can reference this url as the src of an image element\n    .then(response => setPictureUrl(response.url));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pictureUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n} //  Version with useEffect and no button\n// import React, {useState, useEffect} from 'react'\n// function UnsplashAPI() {\n//     const [photoUrl, setPhotoUrl] = useState('');\n//     const loadData = () => {\n//         fetch(\"https://source.unsplash.com/random\")\n//         .then((response) => setPhotoUrl(response.url)) \n//     }\n//     useEffect(() => {\n//         loadData()\n//     });\n//     return(\n//         <div className=\"unplash-image\">\n//             <img  src={photoUrl} alt=\"\" /> \n//         </div>\n//     )\n// }\n// export default UnsplashAPI \n\n_s(Picture, \"JUZSmVRmDxdQIASOoHi6pon41K4=\");\n\n_c = Picture;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"sources":["/Users/adamrturman/Desktop/coding/budget-buddy/client/src/Picture.tsx"],"names":["React","Picture","pictureUrl","setPictureUrl","useState","handleClick","event","fetch","then","response","url"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,KAAK,CAACI,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAgB;AAClCC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACA;AACA;AACA;AAHA,KAIGC,IAJH,CAISC,QAAD,IAAcN,aAAa,CAACM,QAAQ,CAACC,GAAV,CAJnC;AAKD,GAND;;AASA,sBACI;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEH;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD,C,CAEH;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;GA3CwBD,O;;KAAAA,O","sourcesContent":["import * as React from \"react\";\n\nexport default function Picture() {\n    const [pictureUrl, setPictureUrl] = React.useState('');\n  \n    const handleClick = (event: any) => {\n      fetch(\"https://source.unsplash.com/random\")\n      //  the response object has a url property that references the random picture\n      //  we can set this to the state of the pictureUrl\n      //  In the return, we can reference this url as the src of an image element\n        .then((response) => setPictureUrl(response.url))\n    };\n\n  \n    return (\n        <div>\n          <button onClick={handleClick}>Click</button>\n          <img src={pictureUrl}></img>\n        </div>\n      );\n  }\n\n//  Version with useEffect and no button\n// import React, {useState, useEffect} from 'react'\n\n\n// function UnsplashAPI() {\n//     const [photoUrl, setPhotoUrl] = useState('');\n\n//     const loadData = () => {\n//         fetch(\"https://source.unsplash.com/random\")\n//         .then((response) => setPhotoUrl(response.url)) \n//     }\n\n//     useEffect(() => {\n//         loadData()\n//     });\n\n//     return(\n//         <div className=\"unplash-image\">\n//             <img  src={photoUrl} alt=\"\" /> \n//         </div>\n//     )\n// }\n\n// export default UnsplashAPI "]},"metadata":{},"sourceType":"module"}